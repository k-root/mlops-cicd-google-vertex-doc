steps:
# - name: 'gcr.io/cloud-builders/git'
#   args: ['config', '--global', 'user.name',
#          '$$USERNAME']
#   secretEnv: ['USERNAME']
#   id: 'Set git env username'
# - name: 'gcr.io/cloud-builders/git'
#   args: ['config', '--global', 'user.password',
#          '$$PASSKEY']
#   secretEnv: ['PASSWORD']
#   id: 'Set git env password'
# - name: 'gcr.io/cloud-builders/git'
#   args: ['remote', 'set-url', 'origin',
#          'git@github.com:$$USERNAME/mlops-cicd-google-vertex-doc.git']
#   secretEnv: ['USERNAME']
#   id: 'Set git env'

# Access the id_github file from Secret Manager, and setup SSH
# steps:
# - name: 'gcr.io/cloud-builders/git'
#   secretEnv: ['SSH_KEY']
#   entrypoint: 'bash'
#   args:
#   - -c
#   - |
#     echo "$$SSH_KEY" >> /root/.ssh/id_rsa
#     chmod 400 /root/.ssh/id_rsa
#   volumes:
#   - name: 'ssh'
#     path: /root/.ssh

# Clone the repository
# - name: 'gcr.io/cloud-builders/git'
#   args:
#   - clone
#   - --recurse-submodules
#   - git@github.com:GIT_USERNAME/GIT_REPOSITORY
#   volumes:
#   - name: 'ssh'
#     path: /root/.ssh


- name: 'gcr.io/cloud-builders/git'
  args: ['clone', '--single-branch', '--branch',
         'main','https://github.com/k-root/mlops-cicd-google-vertex-doc',
         '--depth', '1',
         '--verbose']
  id: 'Clone Repository'
  
# - name: 'gcr.io/cloud-builders/gsutil'
#   args: ['cp', '*.py', '*.yaml', 'gs://springml-notebook-testing-mlops-artifacts/pipeline_root/chicago-taxi-pipe/modules']
#   dir: 'mlops-cicd-google-vertex-doc'
#   id: 'Copy Modules'
#   waitFor: ['Clone Repository']
- name: 'python'
  entrypoint: 'python'
  args: ['setup.py', 'sdist', '--formats=gztar' ]
  dir: 'mlops-cicd-google-vertex-doc/training_package'
  id: 'Build python application package'
  waitFor: ['-']

- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', 'mlops-cicd-google-vertex-doc/training_package/dist/trainer-0.1.tar.gz', 'gs://springml-notebook-testing-mlops-artifacts']
  waitFor: ['Build python application package']
  id: 'Upload package to GCS'
# gsutil cp training_package/dist/trainer-0.1.tar.gz $BUCKET_URI/

- name: 'gcr.io/springml-notebook-testing/mlops-vertex-kfp:latest'
  # entrypoint: 'python'
  args: ['python', 'run_pipeline.py' ]
  dir: 'mlops-cicd-google-vertex-doc'
  id: 'Run Pipeline'
  waitFor: ['Upload package to GCS']

# availableSecrets:
#   secretManager:
#   - versionName: projects/springml-notebook-testing/secrets/git_passkey/versions/latest
#     env: 'PASSKEY'
#   - versionName: projects/springml-notebook-testing/secrets/git_username/versions/latest
#     env: 'USERNAME'
#   # - versionName: projects/springml-notebook-testing/secrets/github_ssh/versions/latest
#   #   env: 'SSH_KEY'
options:
  logging: CLOUD_LOGGING_ONLY